STEP-I:
Run this command to create a intersimilarity matrix:

>mahout spark-itemsimilarity --input hdfs://cshadoop1/TRIAL/newinputC --output hdfs://cshadoop1/TRIAL/outputM5 --elementDelim "," --maxSimilaritiesPerItem 5

===================================================================================================================



// Spark Shell Commands : Enter these on Spark interactive shell

val uID = "Wi-IiJA36kpnk_Vphuq0zQ" // FIXED ONE UID FOFR TESTING PURPOSE...

val rFile = sc.textFile("hdfs://cshadoop1/TRIAL/review3.csv")
val rArray = rFile.toArray
val ratedList = new scala.collection.mutable.MutableList[String]

	for(i <- 0 until rArray.length){
     val rateLine = rArray(i).split("::")
     if(rateLine(8) == uID && rateLine(20) == "4") {
     ratedList += rateLine(2)
     }
    }

// To print the list of business

 print(ratedList)

 // Output : MutableList(dR4dQCRZKPk7CQEZxGPSJQ, dR4dQCRZKPk7CQEZxGPSJQ)

 ***********************************************************************
 



val simMatrix = sc.textFile("hdfs://cshadoop1/TRIAL/outputM5/indicator-matrix/part-00000")
val iArray = simMatrix.toArray
val itemMap = new scala.collection.mutable.HashMap[String,List[String]].withDefaultValue(Nil)

	for(i <- 0 until iArray.length){
		val itemLine = iArray(i).split("\\s+")
		val itemKey = itemLine(0)
		if(itemLine.length > 1){
			val spaceSplit = itemLine(1).split(",")
			for( j <- 0 until spaceSplit.length){
				val busSplit = spaceSplit(j).split(":")
				val busID = busSplit(0)
				itemMap(itemKey) ::= busID
			}
		}
	}


	// this is the code to print the list of the recommended businesses.........


for(i <- 0 until ratedList.length){
	val busRow = ratedList(i)
	if(itemMap.contains(busRow)){
		println("")
		print(busRow+" ====> ")
		print(itemMap(busRow) + " ")
	}
}
********************************************************************************************
 